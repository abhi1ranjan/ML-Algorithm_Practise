{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "_uuid": "d77e17704754fcc12aed372eca3be84ef98ba442"
   },
   "source": [
    "# Comparison of anomaly detection algorithms on the credit card fraud dataset:\n",
    "\n",
    "* Multivariate Gaussian probability, Auto Encoders, Local Outlier Factor LOF, Robust Covariance (Elliptic Envelope), Isolation Forest and One Class SVM\n",
    "\n",
    "* I believe that a system for anomaly detection should NOT be a supervised ML algorithm as it will (maybe) learn only anomalies it has seen during training. The true magic lies in being able to identify an anomaly never seen before...\n",
    "* As the data is very skewed - there are **only 0.17%** fraudulent transactions in the 280k samples -  accuracy is not a good metric: any \"model\" predicting ALL are normal transactions will have a 99.83% accuracy. \n",
    "* We need to use Recall, Precision and their prodigy (harmonic mean) - the F1 score. I've tried to optimize each model's hyperparameters for the best F1.\n",
    "* The models below do not take into account the time sequences, (while still having the time as a separate feature).The time series nature of the anomaly detection should be dealt with RNN or LSMT or etc. - maybe another notebook.\n",
    "* The training set does NOT include any Fraud, so when the model is exposed to one in Test, it will stand out from the normal transactions. I've tried dividing the Fraud half into a Validation subset and half in Test - F1 score being lower.\n",
    "* PCA was used only for visualization. With or Without Scaling before PCA - F1 score very low.\n",
    "\n",
    "* With the above in mind I've compared between the following on F1 score on **Test**:\n",
    "\n",
    "\n",
    "### **Multivariate Gaussian prob distribution F1= 0.71** optimizing Epsilon \n",
    "\n",
    "### **Auto-encoders F1= 0.53** optimizing Reconstruction Error\n",
    "\n",
    "### **LOF Local Outlier Factor F1= 0.57** optimizing number of neighbors\n",
    "\n",
    "### **Robust Covariance (Elliptic Envelope) *F1= 0.80*** optimizing support fraction\n",
    "\n",
    "### **Isolation Forest F1= 0.47** optimizing num estimators\n",
    "\n",
    "### **One Class SVM F1= 0.27** optimizing nu\n",
    "\n",
    "\n",
    "### Check out nb comparing 5 supervised learning algorithms on this dataset using oversampling, SMOTE and ADASYN \n",
    "https://www.kaggle.com/drscarlat/fraud-detection-under-oversampling-smote-adasyn \n",
    "### ...it achieves F1 = 0.87\n",
    "\n",
    "* Many thanks to the following:\n",
    "* https://scikit-learn.org/stable/auto_examples/plot_anomaly_comparison.html#sphx-glr-auto-examples-plot-anomaly-comparison-py\n",
    "* https://www.kaggle.com/tildekarthik/a-multivariate-gaussian-anomaly-detection\n",
    "* https://www.kaggle.com/clemensmzr/simple-multivariate-gaussian-anomaly-detection\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "_cell_guid": "39fa021b-426e-45a2-90a5-c5c3f1dea498",
    "_uuid": "16f9d7ff523d369820a361f01f1ab9d2f0dd70f7",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:35:44.104558Z",
     "iopub.status.busy": "2024-11-16T09:35:44.104268Z",
     "iopub.status.idle": "2024-11-16T09:35:46.782216Z",
     "shell.execute_reply": "2024-11-16T09:35:46.780975Z",
     "shell.execute_reply.started": "2024-11-16T09:35:44.104510Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/creditcard.csv\n"
     ]
    }
   ],
   "source": [
    "# IMPORT MODULES\n",
    "\n",
    "import numpy as np\n",
    "from numpy import ma\n",
    "import pandas as pd\n",
    "import math\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.colors as colors\n",
    "%matplotlib inline\n",
    "from matplotlib import ticker, cm\n",
    "from matplotlib.pyplot import figure\n",
    "import seaborn as sns\n",
    "\n",
    "from scipy.stats import multivariate_normal\n",
    "from sklearn.metrics import f1_score, confusion_matrix, classification_report, precision_recall_fscore_support\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.neighbors import LocalOutlierFactor\n",
    "from sklearn.ensemble import IsolationForest\n",
    "from sklearn.covariance import EllipticEnvelope\n",
    "from sklearn.svm import OneClassSVM\n",
    "\n",
    "from keras.models import Model, load_model\n",
    "from keras.layers import Input, Dense\n",
    "from keras.callbacks import ModelCheckpoint, TensorBoard\n",
    "from keras import regularizers\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "_cell_guid": "a83bbbcc-3cfe-4f3d-8b1f-d60a8241eba4",
    "_uuid": "4aea5c7bfee88ad381c4c2b350195b2818338112",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:36:02.411239Z",
     "iopub.status.busy": "2024-11-16T09:36:02.410877Z",
     "iopub.status.idle": "2024-11-16T09:36:07.128438Z",
     "shell.execute_reply": "2024-11-16T09:36:07.127605Z",
     "shell.execute_reply.started": "2024-11-16T09:36:02.411189Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(284807, 31)\n",
      "Index(['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n",
      "       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n",
      "       'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount',\n",
      "       'Class'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "# LOAD DATA\n",
    "\n",
    "dfRaw = pd.read_csv('../input/creditcard.csv')\n",
    "print(dfRaw.shape)\n",
    "print(dfRaw.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "_uuid": "d090dcd0ae534aec20381144696af2ac0f7707d5",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:36:32.162040Z",
     "iopub.status.busy": "2024-11-16T09:36:32.161701Z",
     "iopub.status.idle": "2024-11-16T09:36:32.303871Z",
     "shell.execute_reply": "2024-11-16T09:36:32.303047Z",
     "shell.execute_reply.started": "2024-11-16T09:36:32.161990Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data  (284807, 31)\n",
      "normal_data  (284315, 31)\n",
      "fraud_data  (492, 31)\n"
     ]
    }
   ],
   "source": [
    "data = dfRaw.copy()\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:20:07.519312Z",
     "iopub.status.busy": "2024-11-16T12:20:07.518655Z",
     "iopub.status.idle": "2024-11-16T12:20:07.525041Z",
     "shell.execute_reply": "2024-11-16T12:20:07.524184Z",
     "shell.execute_reply.started": "2024-11-16T12:20:07.519082Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(284807, 31)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfRaw.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T09:36:46.151261Z",
     "iopub.status.busy": "2024-11-16T09:36:46.150946Z",
     "iopub.status.idle": "2024-11-16T09:36:46.221700Z",
     "shell.execute_reply": "2024-11-16T09:36:46.220779Z",
     "shell.execute_reply.started": "2024-11-16T09:36:46.151214Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percent fraud  0.173 %\n",
      "____________________________________________________________________________________________________\n",
      "   Time        V1        V2        V3  ...         V27       V28  Amount  Class\n",
      "0   0.0 -1.359807 -0.072781  2.536347  ...    0.133558 -0.021053  149.62      0\n",
      "1   0.0  1.191857  0.266151  0.166480  ...   -0.008983  0.014724    2.69      0\n",
      "2   1.0 -1.358354 -1.340163  1.773209  ...   -0.055353 -0.059752  378.66      0\n",
      "3   1.0 -0.966272 -0.185226  1.792993  ...    0.062723  0.061458  123.50      0\n",
      "4   2.0 -1.158233  0.877737  1.548718  ...    0.219422  0.215153   69.99      0\n",
      "\n",
      "[5 rows x 31 columns]\n"
     ]
    }
   ],
   "source": [
    "print(\"Percent fraud \", round(100*492/284807, 3),\"%\")\n",
    "print(\"_\"*100)\n",
    "print(data.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "_uuid": "4a139ae5bac053937ede662b72b0208ef4c9da9b"
   },
   "source": [
    " ...# Features' Prob DISTRIBUTION ... Visualization\n",
    "\n",
    "plt.figure()\n",
    "matplotlib.style.use('ggplot')\n",
    "pca_columns = list(data)[:-1]\n",
    "normal_data[pca_columns].hist(stacked=False, bins=100, figsize=(12,30), layout=(16,2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T09:44:07.598214Z",
     "iopub.status.busy": "2024-11-16T09:44:07.597838Z",
     "iopub.status.idle": "2024-11-16T09:44:22.562082Z",
     "shell.execute_reply": "2024-11-16T09:44:22.561246Z",
     "shell.execute_reply.started": "2024-11-16T09:44:07.598145Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x2160 with 32 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Features' Prob DISTRIBUTION ... Visualization\n",
    "# The code visualizes the distribution of each PCA feature in normal_data using histograms.\n",
    "\n",
    "plt.figure()\n",
    "matplotlib.style.use('ggplot')\n",
    "pca_columns = list(data)[:-1]\n",
    "normal_data[pca_columns].hist(stacked=False, bins=100, figsize=(12,30), layout=(16,2))\n",
    "# Adjust subplot spacing\n",
    "plt.subplots_adjust(hspace=0.5, wspace=0.3)  # Adjust vertical and horizontal space\n",
    "# Show the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:17:24.466416Z",
     "iopub.status.busy": "2024-11-16T12:17:24.465911Z",
     "iopub.status.idle": "2024-11-16T12:17:24.473479Z",
     "shell.execute_reply": "2024-11-16T12:17:24.472712Z",
     "shell.execute_reply.started": "2024-11-16T12:17:24.466326Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Time',\n",
       " 'V1',\n",
       " 'V2',\n",
       " 'V3',\n",
       " 'V4',\n",
       " 'V5',\n",
       " 'V6',\n",
       " 'V7',\n",
       " 'V8',\n",
       " 'V9',\n",
       " 'V10',\n",
       " 'V11',\n",
       " 'V12',\n",
       " 'V13',\n",
       " 'V14',\n",
       " 'V15',\n",
       " 'V16',\n",
       " 'V17',\n",
       " 'V18',\n",
       " 'V19',\n",
       " 'V20',\n",
       " 'V21',\n",
       " 'V22',\n",
       " 'V23',\n",
       " 'V24',\n",
       " 'V25',\n",
       " 'V26',\n",
       " 'V27',\n",
       " 'V28',\n",
       " 'Amount']"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "_uuid": "6aa7fb8697a80ede29dafc92e3759c223d519656",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:46:29.459808Z",
     "iopub.status.busy": "2024-11-16T09:46:29.459455Z",
     "iopub.status.idle": "2024-11-16T09:46:30.785120Z",
     "shell.execute_reply": "2024-11-16T09:46:30.783797Z",
     "shell.execute_reply.started": "2024-11-16T09:46:29.459754Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean 88.29102242225574 122.21132113821133\n",
      "Median 22.0 9.25\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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tpqbm1VXVzfDE2QmHo+rs7NT3333nTzPUzgc1tq1a83PfunSJb344ou6cuWKRkdHtWLFCm3YsEEDAwPq6OjQ0NCQ6urq9Nxzz6msrEyXL1/Wq6++qn/961+aO3euWlpadMcdd8z0GBkbGxvT9u3bFQwGtX379qKZ+9lnn9WcOXNUUlKi0tJStbW15eex7grU6Oio+93vfufOnDnjLl++7H7/+9+7r776aqaXlTP9/f3uyy+/dM8//3x629tvv+0OHDjgnHPuwIED7u2333bOOffxxx+71tZWNzY25k6cOOF27NgxI2vOhUQi4b788kvnnHPnz593W7dudV999ZX52cfGxtyFCxecc85dvnzZ7dixw504ccK1t7e7w4cPO+ece+2119zBgwedc87985//dK+99ppzzrnDhw+7V155ZWYWniPvvfee6+jocH/+85+dc65o5m5ubnapVGrctnw81gv21M31b7NQVlaWfpsFK5YuXSqfzzduWywWU1NTkySpqakpPe/Ro0e1atUqeZ6nJUuWaGRkRMlk8qavORcCgUD6KOX2229XbW2tEomE+dk9z9OcOXMkSaOjoxodHZXneerv79eKFSskSatXrx439+rVqyVJK1as0GeffSZXoD9uGxwcVG9vr9asWSNJcs4VxdwTycdjvWBDf6O3WUgkEjO4ovxLpVIKBAKSpMrKSqVSKUlXvxahUCh9PStfi4GBAZ0+fVqLFi0qitnHxsb0wgsvaNOmTaqvr9e8efNUXl6u0tJSSVd/EfHabNc//ktLS1VeXq6hoaEZW3s23nzzTT322GPyPE+SNDQ0VBRzX9Pa2qo//OEP6XcKyMdjvaDP0Rczz/PS/zEsunjxotrb2/Xkk0+qvLx83Oeszl5SUqKXX35ZIyMj2r17t7755puZXlLeffzxx/L7/aqrq1N/f/9ML+em27Vrl4LBoFKplF566SXV1NSM+3yuHusFG/qpvM2CNX6/X8lkUoFAQMlkUhUVFZKufi3i8Xj6eoX+tbhy5Yra29v14IMP6r777pNUPLNL0o9+9CMtW7ZMJ0+e1Pnz5zU6OqrS0lIlEon0bNce/1VVVRodHdX58+c1d+7cGV759J04cUJHjx5VX1+fLl26pAsXLujNN980P/c11+by+/1qbGzUqVOn8vJYL9hTN8X4NgsNDQ3q7u6WJHV3d6uxsTG9vaenR845nTx5UuXl5elv/QqNc0779u1TbW2tHn744fR267P/97//1cjIiKSrr8A5duyYamtrtWzZMn344YeSpA8++CD9GP/pT3+qDz74QNLVNxFctmxZQX6X85vf/Eb79u1TZ2enWlpadPfdd2vr1q3m55auftd64cKF9OVjx45pwYIFeXmsF/QvTPX29urvf/97+m0W1q9fP9NLypmOjg4dP35cQ0ND8vv92rBhgxobGxWJRBSPx7/3sqs33nhDn376qWbNmqXm5mYtXLhwpkfIyOeff66dO3dqwYIF6f/AGzdu1OLFi03P/p///EednZ0aGxuTc07333+/Hn30UZ09e1YdHR0aHh7Wj3/8Yz333HO67bbbdOnSJb366qs6ffq0fD6fWlpa0n//oVD19/frvffe0/bt24ti7rNnz2r37t2Srv4A/oEHHtD69es1NDSU88d6QYceADC5gj11AwCYGkIPAMYRegAwjtADgHGEHgCMI/QAYByhBwDjCD0AGPd/Kwzsd6d9rUUAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# PLOT AMOUNT - Norm vs Fraud\n",
    "\n",
    "normal_data[\"Amount\"].loc[normal_data[\"Amount\"] < 500].hist(bins=100);\n",
    "plt.figure()\n",
    "fraud_data[\"Amount\"].loc[fraud_data[\"Amount\"] < 500].hist(bins=100);\n",
    "plt.figure()\n",
    "print(\"Mean\", normal_data[\"Amount\"].mean(), fraud_data[\"Amount\"].mean())\n",
    "print(\"Median\", normal_data[\"Amount\"].median(), fraud_data[\"Amount\"].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "_uuid": "18872b84ab10c918f78256100b06e91da53b7789",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:46:47.304130Z",
     "iopub.status.busy": "2024-11-16T09:46:47.303795Z",
     "iopub.status.idle": "2024-11-16T09:46:49.125154Z",
     "shell.execute_reply": "2024-11-16T09:46:49.124122Z",
     "shell.execute_reply.started": "2024-11-16T09:46:47.304080Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# PLOT TIME - Norm vs Fraud\n",
    "\n",
    "normal_data[\"Time\"].hist(bins=100);\n",
    "plt.figure()\n",
    "fraud_data[\"Time\"].hist(bins=100);\n",
    "plt.figure()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T09:47:28.380614Z",
     "iopub.status.busy": "2024-11-16T09:47:28.380236Z",
     "iopub.status.idle": "2024-11-16T09:48:24.910464Z",
     "shell.execute_reply": "2024-11-16T09:48:24.909644Z",
     "shell.execute_reply.started": "2024-11-16T09:47:28.380563Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7ca5bc4db710>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "colors = np.where(data[\"Class\"]==1,'r','y')\n",
    "\n",
    "data.plot.scatter(\"Time\",\"Amount\", c=colors)\n",
    "data.plot.scatter(\"V1\",\"V2\", c=colors)\n",
    "data.plot.scatter(\"V1\",\"Amount\", c=colors)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "_uuid": "d22ed15fdd566ac52645519d4104d1f398875b65",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:51:38.627599Z",
     "iopub.status.busy": "2024-11-16T09:51:38.627267Z",
     "iopub.status.idle": "2024-11-16T09:51:39.292537Z",
     "shell.execute_reply": "2024-11-16T09:51:39.291689Z",
     "shell.execute_reply.started": "2024-11-16T09:51:38.627543Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data  (284807, 31)\n",
      "normal_data  (284315, 31)\n",
      "fraud_data  (492, 31)\n",
      "Percent fraud  0.1727 %\n"
     ]
    }
   ],
   "source": [
    "#  SCALER / Normalization\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)\n",
    "print(\"Percent fraud \", round(100*492/284807, 4),\"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:21:16.095306Z",
     "iopub.status.busy": "2024-11-16T12:21:16.094872Z",
     "iopub.status.idle": "2024-11-16T12:21:16.101323Z",
     "shell.execute_reply": "2024-11-16T12:21:16.100471Z",
     "shell.execute_reply.started": "2024-11-16T12:21:16.095224Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(284807, 30)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# after removing column 'class' from the data dataframe\n",
    "Xcopy.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "_uuid": "aa3171a509fef5a01025cec92bbb858fcad83ef2",
    "execution": {
     "iopub.execute_input": "2024-11-16T09:51:55.606634Z",
     "iopub.status.busy": "2024-11-16T09:51:55.606316Z",
     "iopub.status.idle": "2024-11-16T09:51:55.613476Z",
     "shell.execute_reply": "2024-11-16T09:51:55.612441Z",
     "shell.execute_reply.started": "2024-11-16T09:51:55.606576Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data['Time'].mean()   -1.0503786406559267e-14\n",
      "data['Amount'].mean()   3.202236423019539e-16\n"
     ]
    }
   ],
   "source": [
    "# Check values are centered around 0 after normalization\n",
    "\n",
    "print(\"data['Time'].mean()  \", data['Time'].mean())\n",
    "print(\"data['Amount'].mean()  \", data['Amount'].mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fraud goes into Test only. Train contains only normal transactions.\n",
    "\n",
    "* Trying with Fraud in both valid and test = F1 score on test = 0.55\n",
    "* **Fraud only in test** = F1 score on test = 0.71\n",
    "* If there are no fraud in valid - there's no need for valid\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "_uuid": "b4f5e7beb7d54a7e588588fae46f5baaa862192f",
    "execution": {
     "iopub.execute_input": "2024-11-16T11:42:29.259602Z",
     "iopub.status.busy": "2024-11-16T11:42:29.259257Z",
     "iopub.status.idle": "2024-11-16T11:42:29.512240Z",
     "shell.execute_reply": "2024-11-16T11:42:29.511384Z",
     "shell.execute_reply.started": "2024-11-16T11:42:29.259536Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "normal_pca_data  (284315, 30)\n",
      "fraud_pca_data (492, 30)\n",
      "Fraud data only in Test with NONE in the training\n",
      "X_train  (209315, 30)\n",
      "X_valid  (75246, 30)\n",
      "y_valid  (75246,)\n",
      "X_test  (75492, 30)\n",
      "y_test  (75492,)\n"
     ]
    }
   ],
   "source": [
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_valid = np.concatenate([shuffled_data[-2*num_test:-num_test], fraud_pca_data[:246]])\n",
    "y_valid = np.concatenate([np.zeros(num_test), np.ones(246)])\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "print(\"normal_pca_data \", normal_pca_data.shape)\n",
    "print(\"fraud_pca_data\", fraud_pca_data.shape)\n",
    "print(\"Fraud data only in Test with NONE in the training\")\n",
    "print(\"X_train \", X_train.shape)\n",
    "print(\"X_valid \", X_valid.shape)\n",
    "print(\"y_valid \", y_valid.shape)\n",
    "print(\"X_test \", X_test.shape)\n",
    "print(\"y_test \", y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Multi-variate Gaussian prob distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "_uuid": "9b18032b819c61d729cc70947ed2da5919e473f7",
    "execution": {
     "iopub.execute_input": "2024-11-16T10:36:18.643555Z",
     "iopub.status.busy": "2024-11-16T10:36:18.643243Z",
     "iopub.status.idle": "2024-11-16T10:36:19.325359Z",
     "shell.execute_reply": "2024-11-16T10:36:19.324394Z",
     "shell.execute_reply.started": "2024-11-16T10:36:18.643507Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max prob of x on X_train 2.2552386882100982e-12\n",
      "mean prob of x on X_train 6.093073190798853e-14\n",
      "------------------------------------------------------------\n",
      "max prob of x on X_test 1.778944727619662e-12\n",
      "mean prob of x on X_test 6.003670188291144e-14\n",
      "------------------------------------------------------------\n",
      "max prob of x on fraud_pca_data 9.639574675465396e-14\n",
      "mean prob of x on fraud_pca_data 1.0508661127410581e-15\n",
      "------------------------------------------------------------\n",
      "Difference between mean prob of Train vs Test  8.940300250770962e-16\n"
     ]
    }
   ],
   "source": [
    "# Calculate the  prob on train vs test vs fraud data only (no normals at all)\n",
    "\n",
    "p = multivariate_normal(mean=np.mean(X_train,axis=0), cov=np.cov(X_train.T))\n",
    "\n",
    "x = p.pdf(X_train)\n",
    "print(\"max prob of x on X_train\", max(x))\n",
    "print(\"mean prob of x on X_train\", np.mean(x))\n",
    "print('-' * 60)\n",
    "MyTrain = np.mean(x)\n",
    "\n",
    "x = p.pdf(X_test)\n",
    "print(\"max prob of x on X_test\", max(x))\n",
    "print(\"mean prob of x on X_test\", np.mean(x))\n",
    "print('-' * 60)\n",
    "MyTest = np.mean(x)\n",
    "\n",
    "x = p.pdf(fraud_pca_data)\n",
    "print(\"max prob of x on fraud_pca_data\", max(x))\n",
    "print(\"mean prob of x on fraud_pca_data\", np.mean(x))\n",
    "print('-' * 60)\n",
    "\n",
    "print('Difference between mean prob of Train vs Test ', MyTrain - MyTest)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Some Insights related to data after preprocessing it.\n",
    "\n",
    "- These small probabilities are normal in high-dimensional spaces, where the probability density is spread thinly.\n",
    "- MyTrain - MyTest = 8.940300250770962e-16, This tiny difference indicates that the model's probability estimates for X_train and X_test are very similar, which suggests good consistency between the training and testing data distributions.\n",
    "- This might indicate that the fraud_pca_data lies in a region of much lower probability density compared to X_train and X_test. In anomaly detection contexts, this could signify that the fraud_pca_data samples are outliers."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " \n",
    "- Precision = percentage of Fraud caught\n",
    "\n",
    "- Recall = percentage of those caught that are actually Fraud\n",
    "\n",
    "- F1 score = Harmonic mean of P & R\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Need to optimize on the hyperparamter of EPSILON\n",
    "\n",
    "# Optimize Epsilon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T10:44:28.093443Z",
     "iopub.status.busy": "2024-11-16T10:44:28.093147Z",
     "iopub.status.idle": "2024-11-16T10:44:28.703455Z",
     "shell.execute_reply": "2024-11-16T10:44:28.702652Z",
     "shell.execute_reply.started": "2024-11-16T10:44:28.093398Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.013  with epsilon  1e-10\n",
      "F1 score on test 0.1143  with epsilon  1e-20\n",
      "F1 score on test 0.2772  with epsilon  1e-30\n",
      "F1 score on test 0.3767  with epsilon  1e-40\n",
      "F1 score on test 0.4399  with epsilon  1e-50\n",
      "F1 score on test 0.5028  with epsilon  1e-60\n",
      "F1 score on test 0.5545  with epsilon  1e-70\n",
      "F1 score on test 0.6003  with epsilon  1e-80\n",
      "F1 score on test 0.6312  with epsilon  1e-90\n",
      "F1 score on test 0.6461  with epsilon  1e-100\n",
      "F1 score on test 0.6713  with epsilon  1e-110\n",
      "F1 score on test 0.6901  with epsilon  1e-120\n",
      "F1 score on test 0.7056  with epsilon  1e-130\n",
      "F1 score on test 0.7139  with epsilon  1e-140\n",
      "F1 score on test 0.7007  with epsilon  1e-150\n",
      "F1 score on test 0.705  with epsilon  1e-160\n",
      "F1 score on test 0.7045  with epsilon  1e-170\n",
      "F1 score on test 0.6723  with epsilon  1e-180\n",
      "F1 score on test 0.6565  with epsilon  1e-190\n",
      "F1 score on test 0.6527  with epsilon  1e-200\n",
      "F1 score on test 0.6518  with epsilon  1e-210\n",
      "F1 score on test 0.6379  with epsilon  1e-220\n",
      "F1 score on test 0.6346  with epsilon  1e-230\n",
      "F1 score on test 0.6382  with epsilon  1e-240\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>epsilon</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.000000e-10</td>\n",
       "      <td>0.0130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.000000e-20</td>\n",
       "      <td>0.1143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.000000e-30</td>\n",
       "      <td>0.2772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.000000e-40</td>\n",
       "      <td>0.3767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.000000e-50</td>\n",
       "      <td>0.4399</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        epsilon      F1\n",
       "0  1.000000e-10  0.0130\n",
       "1  1.000000e-20  0.1143\n",
       "2  1.000000e-30  0.2772\n",
       "3  1.000000e-40  0.3767\n",
       "4  1.000000e-50  0.4399"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find best epsilon re F1 score\n",
    "\n",
    "x = p.pdf(X_test)\n",
    "\n",
    "EpsF1 = []\n",
    "\n",
    "epsilons = [1e-10, 1e-20, 1e-30, 1e-40, 1e-50, 1e-60, 1e-70, 1e-80, 1e-90, 1e-100, 1e-110, 1e-120,\n",
    "           1e-130, 1e-140, 1e-150, 1e-160, 1e-170, 1e-180, 1e-190, 1e-200, 1e-210, 1e-220, 1e-230, 1e-240]\n",
    "\n",
    "for e in range(len(epsilons)):\n",
    "    eps = epsilons[e]\n",
    "    pred = (x <= eps)\n",
    "    f = f1_score(y_test, pred, average='binary')\n",
    "    print(\"F1 score on test\", round(f,4), \" with epsilon \", eps)\n",
    "    EpsF1.append([eps, round(f,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['epsilon', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T10:47:04.314169Z",
     "iopub.status.busy": "2024-11-16T10:47:04.313832Z",
     "iopub.status.idle": "2024-11-16T10:47:04.322348Z",
     "shell.execute_reply": "2024-11-16T10:47:04.321416Z",
     "shell.execute_reply.started": "2024-11-16T10:47:04.314119Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "epsilon    1.000000e-140\n",
       "F1          7.139000e-01\n",
       "Name: 13, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Best Epsilon ... Max F1 on test\n",
    "\n",
    "EpsF1df.loc[EpsF1df['F1'].idxmax()]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T10:47:22.396124Z",
     "iopub.status.busy": "2024-11-16T10:47:22.395813Z",
     "iopub.status.idle": "2024-11-16T10:47:23.291571Z",
     "shell.execute_reply": "2024-11-16T10:47:23.290732Z",
     "shell.execute_reply.started": "2024-11-16T10:47:22.396079Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"epsilon\",\"F1\")\n",
    "plt.xscale('log')\n",
    "plt.xlim(1e-10, 1e-240)\n",
    "plt.title(\"F1 vs decreasing log Epsilon\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "_uuid": "a08ddc6bdc8c5ed376721d7bd7fd09724db8120a",
    "execution": {
     "iopub.execute_input": "2024-11-16T10:48:00.363842Z",
     "iopub.status.busy": "2024-11-16T10:48:00.363501Z",
     "iopub.status.idle": "2024-11-16T10:48:01.155117Z",
     "shell.execute_reply": "2024-11-16T10:48:01.154347Z",
     "shell.execute_reply.started": "2024-11-16T10:48:00.363790Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "epsilon  1e-140\n",
      "__________________________________________________\n",
      "[[74820   180]\n",
      " [  119   373]]\n",
      "__________________________________________________\n",
      "TP  373\n",
      "FP  180\n",
      "TN  74820\n",
      "FN  119\n"
     ]
    }
   ],
   "source": [
    "# CONFUSION MATRIX and F1 SCORE on Test w best epsilon\n",
    "\n",
    "eps = EpsF1df.loc[EpsF1df['F1'].idxmax()]['epsilon']\n",
    "\n",
    "print(\"epsilon \", eps)\n",
    "print(\"_\"*50)\n",
    "pred = (x<=eps)\n",
    "CM = confusion_matrix(y_test,pred)\n",
    "tn, fp, fn, tp = confusion_matrix(y_test,pred).ravel()\n",
    "\n",
    "print(CM)\n",
    "print(\"_\"*50)\n",
    "print(\"TP \", tp)\n",
    "print(\"FP \", fp)\n",
    "print(\"TN \", tn)\n",
    "print(\"FN \", fn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Function Arguments**\n",
    "\n",
    "cm: The confusion matrix, typically a 2D NumPy array.\n",
    "target_names: List of class labels (e.g., [\"Class 0\", \"Class 1\"]) to be shown on the axes.\n",
    "title: Title of the plot.\n",
    "cmap: Colormap for the plot (default is Blues if none is specified).\n",
    "normalize: If True, the confusion matrix values are normalized to proportions.\n",
    "\n",
    "np.trace(cm): Calculates the sum of diagonal elements of the confusion matrix (i.e., correctly classified instances).\n",
    "np.sum(cm): Total number of samples.\n",
    "accuracy: Ratio of correct predictions to total predictions.\n",
    "misclass: Proportion of misclassified predictions.\n",
    "\n",
    "**This function provides a detailed and visually intuitive way to analyze a confusion matrix:**\n",
    "\n",
    "- Diagonal values: Correct classifications.\n",
    "- Off-diagonal values: Misclassifications.\n",
    "\n",
    "The normalization option makes it easier to compare proportions instead of raw counts, which is useful when class distributions are imbalanced."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T11:41:32.720169Z",
     "iopub.status.busy": "2024-11-16T11:41:32.719807Z",
     "iopub.status.idle": "2024-11-16T11:41:32.732090Z",
     "shell.execute_reply": "2024-11-16T11:41:32.731217Z",
     "shell.execute_reply.started": "2024-11-16T11:41:32.720117Z"
    }
   },
   "outputs": [],
   "source": [
    "def plot_confusion_matrix(cm,target_names,title='Confusion matrix',cmap=None,\n",
    "                          normalize=False):\n",
    "    import itertools\n",
    "    accuracy = np.trace(cm) / float(np.sum(cm))\n",
    "    misclass = 1 - accuracy\n",
    "\n",
    "    if cmap is None:\n",
    "        cmap = plt.get_cmap('Blues')\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n",
    "    plt.title(title)\n",
    "    plt.colorbar()\n",
    "\n",
    "    if target_names is not None:\n",
    "        tick_marks = np.arange(len(target_names))\n",
    "        plt.xticks(tick_marks, target_names, rotation=45)\n",
    "        plt.yticks(tick_marks, target_names)\n",
    "\n",
    "    if normalize:\n",
    "        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
    "        \n",
    "    thresh = cm.max() / 1.5 if normalize else cm.max() / 2\n",
    "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
    "        if normalize:\n",
    "            plt.text(j, i, \"{:0.4f}\".format(cm[i, j]),\n",
    "                     horizontalalignment=\"center\",\n",
    "                     color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "        else:\n",
    "            plt.text(j, i, \"{:,}\".format(cm[i, j]),\n",
    "                     horizontalalignment=\"center\",\n",
    "                     color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.ylabel('True label')\n",
    "    plt.xlabel('Predicted label\\naccuracy={:0.4f}; misclass={:0.4f}'.format(accuracy, misclass))\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T11:41:37.122404Z",
     "iopub.status.busy": "2024-11-16T11:41:37.122090Z",
     "iopub.status.idle": "2024-11-16T11:41:37.666864Z",
     "shell.execute_reply": "2024-11-16T11:41:37.665285Z",
     "shell.execute_reply.started": "2024-11-16T11:41:37.122358Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAf8AAAHICAYAAABAjuOrAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzs3XtcVVX+//HX4S4cRQ6I18wwyTQRFMvUgJTGmbRvftUcLZvUHJ3w0tVEm6ZGSy0tzVsXLZ2ym5GZWV8tIzRlVBDQsBRNK0kN4SAKXrid3x/+PCOjIslNWe9nj/N4cNZeZ5/PxhOf81lr7b0tDofDgYiIiBjDpbYDEBERkZql5C8iImIYJX8RERHDKPmLiIgYRslfRETEMEr+IiIihlHyF6lCxcXFjBgxAn9/fywWCwkJCVWy31atWvHcc89Vyb6udMOGDSM6Orq2wxCp05T8pc7LycnhySef5IYbbsDLy4vAwEAiIiJ4++23KS4urtL3+vjjj3nvvff47LPPOHToEN26dauS/SYlJfHoo49Wyb7Kk5CQgMViwdPTk+zs7DLbioqKaNy4MRaLhWXLllV4nxs3bsRisfDTTz9VqP8rr7zCRx999HvCFpHfya22AxCpTgcOHKBHjx64ubkxZcoUwsLCcHd3JzExkVmzZhESEkJoaGiVvd+ePXto3rx5lSX9sxo1alSl+7uUJk2a8Pbbb/PYY4852z755BPq1atXbe9ZVFSEu7s7vr6+1fYeInKGKn+p02JiYjh9+jQpKSncd999tGvXjjZt2vDAAw+wbds22rRpA5xJPLGxsTRv3hwPDw/atWvHe++9V2ZfFouFhQsXcv/991O/fn1atGjB9OnTndujoqJ4+umn2bdvHxaLhVatWjnbR44cWWZfzz33nHM7wM6dO+nduzcNGzbEx8eHG2+8kXfeece5/b+H/Y8fP87o0aNp1KgRnp6ehIeH8+WXXzq3//TTT1gsFpYvX07fvn3x9vYmKCiIpUuXVuj39uCDD7J48eIybW+88QYPPvjgeX1feeUVQkNDsVqtNGnShMGDB3Po0CFnHLfddhsA1113HRaLhaioKOA/w/vz5s2jVatWeHp6cvLkyTLD/qdPnyYsLIx+/fo53+/kyZPcdNNN3HvvvRU6FhE5n5K/1Fl2u50vvviCsWPHXrCadHd3x8fHB4DJkyezaNEi5syZQ3p6OkOHDmXo0KF8/fXXZV7zz3/+k4iICNLS0pg0aRKTJ0929lmxYgWPP/44rVq14tChQyQlJVU41iFDhuDv709iYiLfffcdL7/8Mn5+fhftP2LECNauXcuyZctIS0uje/fu9O3bl127dpXpFxsby1/+8hd27NjB4MGDGTlyJBkZGZeMZ/Dgwfz6669s3LgRgB9//JH169czYsSIC/afNWsW3333HZ988gm//PILgwcPBuCaa67h008/BWDr1q0cOnSIFStWOF+3detW4uPj+fTTT9m+fTseHh5l9uvp6cmHH37IunXrmD9/PgDjx4/n1KlTvP7665c8DhG5CIdIHbVlyxYH4Pj444/L7VdQUODw8PBwLFiwoEx7v379HLfffrvzOeAYN25cmT5t27Z1xMbGOp8/88wzjtatW5fpExkZ6XjwwQfLtE2dOtVx7bXXOp83aNDAsWTJkovGeO211zqmTp3qcDgcjj179jgAx+eff16mT1hYmGP48OEOh8Ph2L9/vwNwvPTSS87txcXFDqvV6njttdcu+j7ffPONA3AcOHDA8dBDDzn+8pe/OBwOh2PixImOu+66y/l7eOeddy66j5SUFAfgyMzMdDgcDse3337rABz79+8v0++BBx5w+Pr6Oo4fP35ee69evcq0LV261OHp6el4+umnHe7u7o6tW7de9P1F5NJU+Uud5ajgPav27t1LYWEhERERZdojIyPZuXNnmbb/Xh/QrFkzfvvtt8oFCjzxxBOMHDmSqKgonn32WVJSUi7a9/vvvwc4L96IiIhy43V1dSUwMLDC8Y4aNYqPPvqII0eOsHTpUv76179esF9CQgK9e/fmmmuuoX79+vTo0QOAn3/++ZLvceONN2K1Wi/Z74EHHuDuu+9m6tSpTJ06lS5dulToGETkwpT8pc5q06YNLi4uzmRZFf57WNpisVBaWlrua1xcXM77IlJUVFTm+dNPP01GRgaDBg0iPT2drl278ve//71W4j0rNDSUm266iSFDhuDm5sadd955Xp9ffvmFO++8k1atWvHBBx+QnJzMqlWrACgsLLzke5yddrmU/Px8UlJScHV1rdC0hYiUT8lf6iybzcaf/vQn5s+fT15e3nnbi4qKKCgo4Prrr8fT05MNGzaU2b5+/XpuuummSscRGBjIwYMHy7Rd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+vfvT8OGDfUFQK4KLi5n/oSmpqbStGlTkpKSeOutt2o5KpFLU/KXWuNwOLD8/1tqbd++nZ07d1JQUMCAAQMICAggMTGRjIwMfQGQK1piYiIffPABvXr1Yvjw4WRlZfHGG2/Udlgi5XJ99tlnn63tIMRMZxP/6tWrWbduHXl5eSQnJ2O1WomMjOTAgQOkpqbi5+dHQEBALUcrcmE///wzzZs35+abb6Zx48a0adOGzz//nJ9++onOnTvXdngiF6TKX2rVjh07SE9PZ8qUKVitVjIzM9m0aRPp6en069ePoKAgmjRpUtthipznxx9/xG63U79+fb744guys7NxdXWladOmtGnThkOHDnH06NHaDlPkgnR5X6lR5w71Axw8eBA3Nze+//57vv32W8aOHcu//vUvcnNz6d+/Px07dqzFaEUuLCcnh5UrV1K/fn369evH119/zZo1axg9ejQHDx5k27ZtPPTQQzRo0KC2QxW5IJ1LJTXm3MS/Z88emjZtSmBgIG5ubnz99dfccccd+Pn50bJlSxo0aECrVq1qN2CRi/D396dz586kp6ezatUq/vSnP+Hu7s66des4ceIEgwcPVuKXK5oqf6lxX375JZ999hktWrSgY8eOdOvWjR07dvD6669z5513snXrViZOnKjhfrnibNmyhd27d/OXv/wFODNttW3bNnx9fbnzzjvx8vKiuLhY16iQK54W/Em1O7fiz8vL49///jcPP/wwNpuNffv2cfDgQSIiIrj++us5evQof/7zn2nWrFktRy1y/jRVaWkpX3zxBXa7nfbt29O4cWN+++031q9fT3FxMa1bt8bV1bXMa0SuRPp6KtXq3D+ea9as4ejRoxw4cID69esTGhqKw+Hgu+++Y9WqVdx555106tSpliMWOePcz+7ZhXstW7Zk7NixvPHGG5SUlDBkyBBsNhtBQUFERkaq4perhip/qVZn/3hu2bKFtWvX0qNHDzZv3szu3bu59dZbadq0KYWFhWRnZxMcHIynp2ctRyxyxtnP7qpVq/j888+Jj48HIDQ0lBtuuIEPP/yQ1NRUNm3axIMPPkhgYGBthivyu2jOX6rFuVXTvn37WLFiBaGhoURHR+NwOJg4cSLNmjXjkUceAeDUqVN4eXnVZsgiQNnP7ldffcXGjRv55z//yfz589m6dSv33HMPd911F4WFhezZs4cm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\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(CM, \n",
    "                      normalize    = False,\n",
    "                      target_names = ['Normal', 'Fraud'],\n",
    "                      title        = \"Confusion Matrix\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T11:42:47.204150Z",
     "iopub.status.busy": "2024-11-16T11:42:47.203789Z",
     "iopub.status.idle": "2024-11-16T11:42:47.233803Z",
     "shell.execute_reply": "2024-11-16T11:42:47.232530Z",
     "shell.execute_reply.started": "2024-11-16T11:42:47.204084Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision  0.675\n",
      "recall  0.758\n",
      "F1 score on Test 0.714\n"
     ]
    }
   ],
   "source": [
    "# F1 Score\n",
    "# print(\"F1 score\", round(f1_score(y_valid,pred, average='binary'), 4))\n",
    "precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test,pred, average='binary')\n",
    "print(\"precision \", round((precision), 3))\n",
    "print(\"recall \", round((recall), 3))\n",
    "print(\"F1 score on Test\", round((fbeta_score), 3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PCA = 2 ... Only for visualization ... with or without prior scaling = low F1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:06:14.160596Z",
     "iopub.status.busy": "2024-11-16T12:06:14.160274Z",
     "iopub.status.idle": "2024-11-16T12:06:14.165313Z",
     "shell.execute_reply": "2024-11-16T12:06:14.164504Z",
     "shell.execute_reply.started": "2024-11-16T12:06:14.160537Z"
    }
   },
   "outputs": [],
   "source": [
    "# #  SCALER / Normalization\n",
    "\n",
    "# data = dfRaw.copy()\n",
    "# scl = StandardScaler()\n",
    "# all_cols = list(data)[:] \n",
    "# pca_columns = list(data)[:-1] # all cols without Class\n",
    "# Xcopy = data[pca_columns]\n",
    "# XcopyALL = data[all_cols]\n",
    "# Xscaled = scl.fit_transform(Xcopy)\n",
    "# OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "# data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "# data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "# print(\"Before PCA\")\n",
    "# print(data.shape)\n",
    "# print(\"AFTER PCA\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "_uuid": "5e78237e36845df760bcb36b0932d45f5c46d80d",
    "execution": {
     "iopub.execute_input": "2024-11-16T12:24:27.843695Z",
     "iopub.status.busy": "2024-11-16T12:24:27.843370Z",
     "iopub.status.idle": "2024-11-16T12:24:28.599038Z",
     "shell.execute_reply": "2024-11-16T12:24:28.597886Z",
     "shell.execute_reply.started": "2024-11-16T12:24:27.843628Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Before PCA\n",
      "(284807, 31)\n",
      "------------------------------------------------------------\n",
      "AFTER PCA\n",
      "(284807, 3)\n",
      "data  (284807, 3)\n",
      "normal_data  (284315, 3)\n",
      "fraud_data  (492, 3)\n",
      "Percent fraud  0.1727 %\n"
     ]
    }
   ],
   "source": [
    "#  PCA \n",
    "\n",
    "data = dfRaw.copy()\n",
    "print(\"Before PCA\")\n",
    "print(data.shape)\n",
    "print('-'*60)\n",
    "print(\"AFTER PCA\")\n",
    "\n",
    "pca = PCA(n_components = 0.999999) # This way of setting the components = knowledge of the VARIANCE loss during PCA\n",
    "\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] \n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "dataPostPCA = pca.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((dataPostPCA, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = [0,1,'Class'])\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(data.shape)\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)\n",
    "print(\"Percent fraud \", round(100*492/284807, 4),\"%\")\n",
    "\n",
    "# print(data.head)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# For visualization AFTER Scaling and PCA\n",
    "postPCA = pd.DataFrame(data)\n",
    "\n",
    "postPCA.plot.scatter(0,1)\n",
    "plt.xlim(-10, 80)\n",
    "plt.ylim(-10, 10)\n",
    "plt.title(\"Normal post PCA\")\n",
    "plt.show()\n",
    "\n",
    "postPCA = pd.DataFrame(fraud_data)\n",
    "\n",
    "postPCA.plot.scatter(0,1, c='r')\n",
    "plt.xlim(-10, 80)\n",
    "plt.ylim(-10, 10)\n",
    "plt.title(\"Normal post PCA\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:49:22.732322Z",
     "iopub.status.busy": "2024-11-16T12:49:22.731985Z",
     "iopub.status.idle": "2024-11-16T12:49:56.740266Z",
     "shell.execute_reply": "2024-11-16T12:49:56.739268Z",
     "shell.execute_reply.started": "2024-11-16T12:49:22.732277Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "# Assuming 'data' contains the transformed data after PCA\n",
    "postPCA = pd.DataFrame(data)\n",
    "postPCA.columns\n",
    "\n",
    "fig = plt.figure(figsize=(10, 8))\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "\n",
    "# Scatter plot of the first three principal components\n",
    "ax.scatter(postPCA[0], postPCA[1], postPCA['Class'], c='b', marker='o')\n",
    "\n",
    "# Set labels for the axes\n",
    "ax.set_xlabel('PC1')\n",
    "ax.set_ylabel('PC2')\n",
    "ax.set_zlabel('PC3')\n",
    "\n",
    "plt.title(\"3D PCA visualization\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- In the above plot shown, lower plot shows the normal data, upper plots shows the fraud data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:53:17.095529Z",
     "iopub.status.busy": "2024-11-16T12:53:17.095221Z",
     "iopub.status.idle": "2024-11-16T12:53:17.127766Z",
     "shell.execute_reply": "2024-11-16T12:53:17.126876Z",
     "shell.execute_reply.started": "2024-11-16T12:53:17.095481Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PC1    284807\n",
      "PC2    284807\n",
      "PC3    284807\n",
      "dtype: int64\n",
      "PC1   NaN\n",
      "PC2   NaN\n",
      "PC3   NaN\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Create a DataFrame with the first three principal components\n",
    "pca_df = pd.DataFrame(data, columns=['PC1', 'PC2', 'PC3'])\n",
    "print(pca_df.isnull().sum())  # To check for NaN values in each column\n",
    "print(pca_df.var())  # Check variance of each column\n",
    "\n",
    "\n",
    "# # Create pairwise scatter plots of the first three components\n",
    "# sns.pairplot(pca_df)\n",
    "# plt.suptitle(\"Pairwise 2D scatter plots of PCA components\", y=1.02)\n",
    "# plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T12:40:53.781453Z",
     "iopub.status.busy": "2024-11-16T12:40:53.781068Z",
     "iopub.status.idle": "2024-11-16T12:40:58.064979Z",
     "shell.execute_reply": "2024-11-16T12:40:58.063808Z",
     "shell.execute_reply.started": "2024-11-16T12:40:53.781400Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#postPCA = pd.DataFrame(normal_data.sample(10000))\n",
    "postPCA = pd.DataFrame(data)\n",
    "\n",
    "postPCA.plot.scatter(0,1)\n",
    "plt.xlim(-100000, 100000)\n",
    "plt.ylim(0, 30000)\n",
    "plt.title(\"Normal post PCA\")\n",
    "plt.xlabel('Principal Component 1')\n",
    "plt.ylabel('Principal Component 2')\n",
    "plt.show()\n",
    "\n",
    "postPCA = pd.DataFrame(fraud_data)\n",
    "\n",
    "postPCA.plot.scatter(0,1, c='r')\n",
    "plt.xlim(-100000, 100000)\n",
    "plt.ylim(0, 30000)\n",
    "plt.title(\"Fraud post PCA\")\n",
    "plt.xlabel('Principal Component 1')\n",
    "plt.ylabel('Principal Component 2')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "_uuid": "9a8df4d0c2055330b78d591c54f76ece442ebc2a",
    "execution": {
     "iopub.execute_input": "2024-11-16T13:30:08.809844Z",
     "iopub.status.busy": "2024-11-16T13:30:08.809219Z",
     "iopub.status.idle": "2024-11-16T13:30:08.828943Z",
     "shell.execute_reply": "2024-11-16T13:30:08.827899Z",
     "shell.execute_reply.started": "2024-11-16T13:30:08.809739Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "normal_data = normal_data.drop('Class', axis=1)\n",
    "fraud_data = fraud_data.drop('Class', axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "_uuid": "8cc6686d6d3a50b8a81af8cbfda1fb602899af43",
    "execution": {
     "iopub.execute_input": "2024-11-16T13:30:23.249228Z",
     "iopub.status.busy": "2024-11-16T13:30:23.248819Z",
     "iopub.status.idle": "2024-11-16T13:30:24.259183Z",
     "shell.execute_reply": "2024-11-16T13:30:24.258282Z",
     "shell.execute_reply.started": "2024-11-16T13:30:23.249173Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1332x756 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# View the FRAUD on a 2 dims (Post PCA) Guassian distribution of the normal data\n",
    "# Reducing from 30 dims to 2 - helps with the visualization but surely doesn't help with separating the Fraud from the Normal\n",
    "\n",
    "x, y = np.mgrid[-100000:100000:100, -1000:3000:100] \n",
    "pos = np.empty(x.shape + (2,))\n",
    "pos[:, :, 0] = x; pos[:, :, 1] = y\n",
    "rv = multivariate_normal(mean=np.mean(normal_data,axis=0), cov=np.cov(normal_data.T)) # mean and covariance matrix for 2 dims dataset\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "cs = ax.contourf(x, y, rv.pdf(pos))\n",
    "cbar = fig.colorbar(cs)\n",
    "plt.title(\"Fraud projected on normal distribution\")\n",
    "plt.scatter(fraud_data[0],fraud_data[1], edgecolor=\"r\") # Location on chart of the anomaly points\n",
    "fig = matplotlib.pyplot.gcf()\n",
    "fig.set_size_inches(18.5, 10.5)\n",
    "#plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T13:48:31.821721Z",
     "iopub.status.busy": "2024-11-16T13:48:31.821381Z",
     "iopub.status.idle": "2024-11-16T13:48:32.758591Z",
     "shell.execute_reply": "2024-11-16T13:48:32.757550Z",
     "shell.execute_reply.started": "2024-11-16T13:48:31.821653Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1332x756 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# View the FRAUD on a 2 dims (Post PCA) Guassian distribution of the normal data\n",
    "# Reducing from 30 dims to 2 - helps with the visualization but surely doesn't help with separating the Fraud from the Normal\n",
    "\n",
    "x, y = np.mgrid[-100000:120000:100, -1000:3000:100] \n",
    "pos = np.empty(x.shape + (2,))\n",
    "pos[:, :, 0] = x; pos[:, :, 1] = y\n",
    "rv = multivariate_normal(mean=np.mean(fraud_data,axis=0), cov=np.cov(fraud_data.T)) # mean and covariance matrix for 2 dims dataset\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "cs = ax.contourf(x, y, rv.pdf(pos))\n",
    "cbar = fig.colorbar(cs)\n",
    "plt.title(\"Fraud projected on normal distribution\")\n",
    "plt.scatter(fraud_data[0],fraud_data[1], edgecolor=\"r\") # Location on chart of the anomaly points\n",
    "fig = matplotlib.pyplot.gcf()\n",
    "fig.set_size_inches(18.5, 10.5)\n",
    "#plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "_uuid": "76f290bb74811ced591dea9620a99844e2fcccfb",
    "execution": {
     "iopub.execute_input": "2024-11-16T13:47:41.851636Z",
     "iopub.status.busy": "2024-11-16T13:47:41.851302Z",
     "iopub.status.idle": "2024-11-16T13:47:42.831104Z",
     "shell.execute_reply": "2024-11-16T13:47:42.830190Z",
     "shell.execute_reply.started": "2024-11-16T13:47:41.851592Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1332x756 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# View some NORMAL on a 2 dims (Post PCA) Guassian distribution of the normal data\n",
    "# Reducing from 30 dims to 2 - helps with the visualization but surely doesn't help with separating the Fraud from the Normal\n",
    "\n",
    "SampleNormal = normal_data.sample(500)\n",
    "\n",
    "x, y = np.mgrid[-100000:100000:100, -1000:3000:100] \n",
    "pos = np.empty(x.shape + (2,))\n",
    "pos[:, :, 0] = x; pos[:, :, 1] = y\n",
    "rv = multivariate_normal(mean=np.mean(normal_data,axis=0), cov=np.cov(normal_data.T)) # mean and covariance matrix for 2 dims dataset\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "cs = ax.contourf(x, y, rv.pdf(pos))\n",
    "cbar = fig.colorbar(cs)\n",
    "plt.title(\"Normal sample of 500 projected on normal distribution\")\n",
    "plt.scatter(SampleNormal[0],SampleNormal[1], edgecolor=\"b\") # Location on chart of the anomaly points\n",
    "fig = matplotlib.pyplot.gcf()\n",
    "fig.set_size_inches(18.5, 10.5)\n",
    "#plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-11-16T14:00:17.910059Z",
     "iopub.status.busy": "2024-11-16T14:00:17.909645Z",
     "iopub.status.idle": "2024-11-16T14:00:18.841092Z",
     "shell.execute_reply": "2024-11-16T14:00:18.840082Z",
     "shell.execute_reply.started": "2024-11-16T14:00:17.909990Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Before PCA\n",
      "(284807, 31)\n",
      "AFTER PCA\n",
      "(284807, 3)\n",
      "data  (284807, 3)\n",
      "normal_data  (284315, 3)\n",
      "fraud_data  (492, 3)\n",
      "Percent fraud  0.1727 %\n"
     ]
    }
   ],
   "source": [
    "data = dfRaw.copy()\n",
    "\n",
    "print(\"Before PCA\")\n",
    "print(data.shape)\n",
    "print(\"AFTER PCA\")\n",
    "\n",
    "pca = PCA(n_components = 0.999999) \n",
    "\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] \n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "dataPostPCA = pca.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((dataPostPCA, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = [0,1,'Class'])\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(data.shape)\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)\n",
    "print(\"Percent fraud \", round(100*492/284807, 4),\"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-11-16T14:00:22.659225Z",
     "iopub.status.busy": "2024-11-16T14:00:22.658905Z",
     "iopub.status.idle": "2024-11-16T14:00:22.729494Z",
     "shell.execute_reply": "2024-11-16T14:00:22.728635Z",
     "shell.execute_reply.started": "2024-11-16T14:00:22.659177Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "normal_pca_data  (284315, 2)\n",
      "fraud_pca_data (492, 2)\n",
      "Fraud data only in Test with NONE in the training\n",
      "X_train  (209315, 2)\n",
      "X_test  (75492, 2)\n",
      "y_test  (75492,)\n"
     ]
    }
   ],
   "source": [
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data.drop('Class',1)\n",
    "fraud_pca_data = fraud_data.drop('Class',1)\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "#X_valid = np.concatenate([shuffled_data[-2*num_test:-num_test], fraud_pca_data[:246]])\n",
    "#y_valid = np.concatenate([np.zeros(num_test), np.ones(246)])\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "print(\"normal_pca_data \", normal_pca_data.shape)\n",
    "print(\"fraud_pca_data\", fraud_pca_data.shape)\n",
    "print(\"Fraud data only in Test with NONE in the training\")\n",
    "print(\"X_train \", X_train.shape)\n",
    "#print(\"X_valid \", X_valid.shape)\n",
    "#print(\"y_valid \", y_valid.shape)\n",
    "print(\"X_test \", X_test.shape)\n",
    "print(\"y_test \", y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T14:00:32.555040Z",
     "iopub.status.busy": "2024-11-16T14:00:32.554640Z",
     "iopub.status.idle": "2024-11-16T14:00:32.758544Z",
     "shell.execute_reply": "2024-11-16T14:00:32.757173Z",
     "shell.execute_reply.started": "2024-11-16T14:00:32.554964Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max prob of x on X_train 1.369378776781379e-08\n",
      "mean prob of x on X_train 8.169867741057094e-09\n",
      "------------------------------------------------------------\n",
      "max prob of x on X_test 1.3692169625512559e-08\n",
      "mean prob of x on X_test 8.157129019234432e-09\n",
      "------------------------------------------------------------\n",
      "max prob of x on fraud_pca_data 1.368315208328899e-08\n",
      "mean prob of x on fraud_pca_data 7.468033220044313e-09\n",
      "------------------------------------------------------------\n",
      "Difference between mean prob of Train vs Test  1.2738721822661652e-11\n"
     ]
    }
   ],
   "source": [
    "# Calculate the  prob on train vs test vs fraud data only (no normals at all)\n",
    "\n",
    "p = multivariate_normal(mean=np.mean(X_train,axis=0), cov=np.cov(X_train.T))\n",
    "\n",
    "x = p.pdf(X_train)\n",
    "print(\"max prob of x on X_train\", max(x))\n",
    "print(\"mean prob of x on X_train\", np.mean(x))\n",
    "print('-' * 60)\n",
    "MyTrain = np.mean(x)\n",
    "\n",
    "x = p.pdf(X_test)\n",
    "print(\"max prob of x on X_test\", max(x))\n",
    "print(\"mean prob of x on X_test\", np.mean(x))\n",
    "print('-' * 60)\n",
    "MyTest = np.mean(x)\n",
    "\n",
    "x = p.pdf(fraud_pca_data)\n",
    "print(\"max prob of x on fraud_pca_data\", max(x))\n",
    "print(\"mean prob of x on fraud_pca_data\", np.mean(x))\n",
    "print('-' * 60)\n",
    "\n",
    "print('Difference between mean prob of Train vs Test ', MyTrain - MyTest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T14:00:38.371599Z",
     "iopub.status.busy": "2024-11-16T14:00:38.371293Z",
     "iopub.status.idle": "2024-11-16T14:00:38.649771Z",
     "shell.execute_reply": "2024-11-16T14:00:38.648994Z",
     "shell.execute_reply.started": "2024-11-16T14:00:38.371552Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>epsilon</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.10000</td>\n",
       "      <td>0.013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.01000</td>\n",
       "      <td>0.013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.00100</td>\n",
       "      <td>0.013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.00010</td>\n",
       "      <td>0.013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.00001</td>\n",
       "      <td>0.013</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   epsilon     F1\n",
       "0  0.10000  0.013\n",
       "1  0.01000  0.013\n",
       "2  0.00100  0.013\n",
       "3  0.00010  0.013\n",
       "4  0.00001  0.013"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find best epsilon re F1 score\n",
    "\n",
    "x = p.pdf(X_test)\n",
    "\n",
    "EpsF1 = []\n",
    "\n",
    "epsilons = [1e-1, 1e-2, 1e-3, 1e-4, 1e-5, 1e-6, 1e-7, 1e-8, 1e-9, 1e-10]\n",
    "\n",
    "for e in range(len(epsilons)):\n",
    "    eps = epsilons[e]\n",
    "    pred = (x <= eps)\n",
    "    f = f1_score(y_test, pred, average='binary')\n",
    "    #print(\"F1 score on test\", round(f,4), \" with epsilon \", eps)\n",
    "    EpsF1.append([eps, round(f,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['epsilon', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T14:00:41.469609Z",
     "iopub.status.busy": "2024-11-16T14:00:41.469280Z",
     "iopub.status.idle": "2024-11-16T14:00:41.478022Z",
     "shell.execute_reply": "2024-11-16T14:00:41.476830Z",
     "shell.execute_reply.started": "2024-11-16T14:00:41.469553Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "epsilon    1.000000e-09\n",
       "F1         2.170000e-02\n",
       "Name: 8, dtype: float64"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Best Epsilon ... Max F1 on test\n",
    "\n",
    "EpsF1df.loc[EpsF1df['F1'].idxmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-16T14:00:46.508898Z",
     "iopub.status.busy": "2024-11-16T14:00:46.508371Z",
     "iopub.status.idle": "2024-11-16T14:00:47.033961Z",
     "shell.execute_reply": "2024-11-16T14:00:47.032837Z",
     "shell.execute_reply.started": "2024-11-16T14:00:46.508787Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"epsilon\",\"F1\")\n",
    "plt.xscale('log')\n",
    "plt.xlim(1e-1, 1e-10)\n",
    "plt.title(\"F1 vs decreasing log Epsilon\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Best F1 score after PCA = 0.022 ... similar F1 when scaling was used before PCA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Auto Encoders\n",
    "\n",
    "* The idea is to use the Reconstruction Error as the limit to separate between Normal (low reconstruction error) and Fraud anomalies (high reconstruction errors)\n",
    "* Reconstruction error is the MSE between the input X_train and the output of the autoencoder which has the same dimensions as X_train.\n",
    "* Not to be confused with the error between a prediction and the true label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data  (284807, 31)\n",
      "normal_data  (284315, 31)\n",
      "fraud_data  (492, 31)\n",
      "Percent fraud  0.1727 %\n"
     ]
    }
   ],
   "source": [
    "#  SCALER / Normalization\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)\n",
    "print(\"Percent fraud \", round(100*492/284807, 4),\"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data['Time'].mean()   -1.0503786406559267e-14\n",
      "data['Amount'].mean()   3.202236423019539e-16\n"
     ]
    }
   ],
   "source": [
    "# Check values are centered around 0 after normalization\n",
    "\n",
    "print(\"data['Time'].mean()  \", data['Time'].mean())\n",
    "print(\"data['Amount'].mean()  \", data['Amount'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "normal_pca_data  (284315, 30)\n",
      "fraud_pca_data (492, 30)\n",
      "Fraud data only in Test with NONE in the training\n",
      "X_train  (209315, 30)\n",
      "X_test  (75492, 30)\n",
      "y_test  (75492,)\n"
     ]
    }
   ],
   "source": [
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "print(\"normal_pca_data \", normal_pca_data.shape)\n",
    "print(\"fraud_pca_data\", fraud_pca_data.shape)\n",
    "print(\"Fraud data only in Test with NONE in the training\")\n",
    "print(\"X_train \", X_train.shape)\n",
    "#print(\"X_valid \", X_valid.shape)\n",
    "#print(\"y_valid \", y_valid.shape)\n",
    "print(\"X_test \", X_test.shape)\n",
    "print(\"y_test \", y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "input_dim = X_train.shape[1]\n",
    "encoding_dim = 14"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From /opt/conda/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\n",
      "Instructions for updating:\n",
      "Colocations handled automatically by placer.\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "input_1 (InputLayer)         (None, 30)                0         \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 14)                434       \n",
      "_________________________________________________________________\n",
      "dense_2 (Dense)              (None, 7)                 105       \n",
      "_________________________________________________________________\n",
      "dense_3 (Dense)              (None, 7)                 56        \n",
      "_________________________________________________________________\n",
      "dense_4 (Dense)              (None, 30)                240       \n",
      "=================================================================\n",
      "Total params: 835\n",
      "Trainable params: 835\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# Keras Auto Encoder model\n",
    "\n",
    "input_layer = Input(shape=(input_dim, ))\n",
    "\n",
    "encoder = Dense(encoding_dim, activation=\"tanh\", \n",
    "                activity_regularizer=regularizers.l1(10e-5))(input_layer)\n",
    "encoder = Dense(int(encoding_dim / 2), activation=\"relu\")(encoder)\n",
    "\n",
    "decoder = Dense(int(encoding_dim / 2), activation='tanh')(encoder)\n",
    "decoder = Dense(input_dim, activation='relu')(decoder)\n",
    "\n",
    "autoencoder = Model(inputs=input_layer, outputs=decoder)\n",
    "\n",
    "autoencoder.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From /opt/conda/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n",
      "Instructions for updating:\n",
      "Use tf.cast instead.\n",
      "Train on 209315 samples, validate on 75492 samples\n",
      "Epoch 1/10\n",
      "209315/209315 [==============================] - 13s 63us/step - loss: 0.7771 - acc: 0.3907 - val_loss: 0.8719 - val_acc: 0.4384\n",
      "Epoch 2/10\n",
      "209315/209315 [==============================] - 13s 63us/step - loss: 0.7243 - acc: 0.4411 - val_loss: 0.8609 - val_acc: 0.4467\n",
      "Epoch 3/10\n",
      "209315/209315 [==============================] - 13s 61us/step - loss: 0.7140 - acc: 0.4582 - val_loss: 0.8523 - val_acc: 0.4671\n",
      "Epoch 4/10\n",
      "209315/209315 [==============================] - 14s 65us/step - loss: 0.7089 - acc: 0.4632 - val_loss: 0.8495 - val_acc: 0.4633\n",
      "Epoch 5/10\n",
      "209315/209315 [==============================] - 14s 65us/step - loss: 0.7056 - acc: 0.4618 - val_loss: 0.8428 - val_acc: 0.4662\n",
      "Epoch 6/10\n",
      "209315/209315 [==============================] - 14s 66us/step - loss: 0.7033 - acc: 0.4631 - val_loss: 0.8476 - val_acc: 0.4598\n",
      "Epoch 7/10\n",
      "209315/209315 [==============================] - 13s 64us/step - loss: 0.7011 - acc: 0.4637 - val_loss: 0.8424 - val_acc: 0.4588\n",
      "Epoch 8/10\n",
      "209315/209315 [==============================] - 14s 66us/step - loss: 0.6997 - acc: 0.4641 - val_loss: 0.8398 - val_acc: 0.4597\n",
      "Epoch 9/10\n",
      "209315/209315 [==============================] - 13s 62us/step - loss: 0.6979 - acc: 0.4640 - val_loss: 0.8398 - val_acc: 0.4688\n",
      "Epoch 10/10\n",
      "209315/209315 [==============================] - 13s 63us/step - loss: 0.6967 - acc: 0.4648 - val_loss: 0.8383 - val_acc: 0.4634\n"
     ]
    }
   ],
   "source": [
    "nb_epoch = 10\n",
    "batch_size = 32\n",
    "\n",
    "autoencoder.compile(optimizer='adam', \n",
    "                    loss='mean_squared_error', \n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "checkpointer = ModelCheckpoint(filepath=\"model.h5\",\n",
    "                               verbose=0,\n",
    "                               save_best_only=True)\n",
    "tensorboard = TensorBoard(log_dir='./logs',\n",
    "                          histogram_freq=0,\n",
    "                          write_graph=True,\n",
    "                          write_images=True)\n",
    "\n",
    "history = autoencoder.fit(X_train, X_train,\n",
    "                    epochs=nb_epoch,\n",
    "                    batch_size=batch_size,\n",
    "                    shuffle=True,\n",
    "                    validation_data=(X_test, X_test),\n",
    "                    verbose=1,\n",
    "                    callbacks=[checkpointer, tensorboard]).history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# VALIDATION LOSS curves\n",
    "\n",
    "plt.clf()\n",
    "history_dict = history\n",
    "loss_values = history_dict['loss']\n",
    "val_loss_values = history_dict['val_loss']\n",
    "epochs = range(1, (len(history_dict['loss']) + 1))\n",
    "plt.plot(epochs, loss_values, 'bo', label='Training loss')\n",
    "plt.plot(epochs, val_loss_values, 'r', label='Validation loss')\n",
    "plt.title('Training and validation loss')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "# VALIDATION ACCURACY curves\n",
    "\n",
    "plt.clf()\n",
    "acc_values = history_dict['acc']\n",
    "val_acc_values = history_dict['val_acc']\n",
    "epochs = range(1, (len(history_dict['acc']) + 1))\n",
    "plt.plot(epochs, acc_values, 'bo', label='Training acc')\n",
    "plt.plot(epochs, val_acc_values, 'r', label='Validation acc')\n",
    "plt.title('Training and validation accuracy')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the best model saved above during training\n",
    "\n",
    "autoencoder = load_model('model.h5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "209315  rows\n",
      "mean error of recon on TRAIN 0.69\n",
      "std error of recon on TRAIN 2.5\n"
     ]
    }
   ],
   "source": [
    "# Reconstruction error on Train\n",
    "\n",
    "# As Train has no Fraud\n",
    "y_train = np.zeros(X_train.shape[0])\n",
    "\n",
    "predictions = autoencoder.predict(X_train)\n",
    "predictions.shape\n",
    "\n",
    "mse = np.mean(np.power(X_train - predictions, 2), axis=1)\n",
    "error_df = pd.DataFrame({'reconstruction_error': mse,\n",
    "                        'true_class': y_train})\n",
    "print(error_df.shape[0], ' rows')\n",
    "print('mean error of recon on TRAIN', round(error_df.reconstruction_error.mean(),2))\n",
    "print('std error of recon on TRAIN', round(error_df.reconstruction_error.std(),2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "75492  rows\n",
      "mean error of recon on TEST 0.83\n",
      "std error of recon on TEST 4.01\n"
     ]
    }
   ],
   "source": [
    "# Reconstruction error on Test\n",
    "\n",
    "predictions = autoencoder.predict(X_test)\n",
    "predictions.shape\n",
    "\n",
    "mse = np.mean(np.power(X_test - predictions, 2), axis=1)\n",
    "error_df = pd.DataFrame({'reconstruction_error': mse,\n",
    "                        'true_class': y_test})\n",
    "print(error_df.shape[0], ' rows')\n",
    "print('mean error of recon on TEST', round(error_df.reconstruction_error.mean(),2))\n",
    "print('std error of recon on TEST', round(error_df.reconstruction_error.std(),2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "492  rows\n",
      "mean error of recon on FRAUD 22.43\n",
      "std error of recon on FRAUD 28.61\n"
     ]
    }
   ],
   "source": [
    "# Reconstruction error on Fraud\n",
    "\n",
    "# As Fraud is all Fraud\n",
    "y_Fraud = np.ones(fraud_pca_data.shape[0])\n",
    "y_Fraud.shape\n",
    "\n",
    "predictions = autoencoder.predict(fraud_pca_data)\n",
    "predictions.shape\n",
    "\n",
    "mse = np.mean(np.power(fraud_pca_data - predictions, 2), axis=1)\n",
    "error_df = pd.DataFrame({'reconstruction_error': mse,\n",
    "                        'true_class': y_Fraud})\n",
    "print(error_df.shape[0], ' rows')\n",
    "print('mean error of recon on FRAUD', round(error_df.reconstruction_error.mean(),2))\n",
    "print('std error of recon on FRAUD', round(error_df.reconstruction_error.std(),2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "75492  rows\n",
      "mean error of recon on TEST 0.83\n",
      "std error of recon on TEST 4.01\n",
      "F1 score on test 0.4459  with reconstruction error   4.0\n"
     ]
    }
   ],
   "source": [
    "# Predictions on Normal vs Fraud on Test ... using the reconstruction error as the parameter to tweak for best F1\n",
    "\n",
    "# Reconstruction error on Test\n",
    "\n",
    "predictions = autoencoder.predict(X_test)\n",
    "predictions.shape\n",
    "\n",
    "mse = np.mean(np.power(X_test - predictions, 2), axis=1)\n",
    "error_df = pd.DataFrame({'reconstruction_error': mse,\n",
    "                        'true_class': y_test})\n",
    "print(error_df.shape[0], ' rows')\n",
    "print('mean error of recon on TEST', round(error_df.reconstruction_error.mean(),2))\n",
    "print('std error of recon on TEST', round(error_df.reconstruction_error.std(),2))\n",
    "\n",
    "ReconError = 4.0\n",
    "\n",
    "pred = [1 if e > ReconError else 0 for e in error_df.reconstruction_error.values]\n",
    "len(pred)\n",
    "#pred = (x <= eps)\n",
    "f = f1_score(y_test, pred, average='binary')\n",
    "print(\"F1 score on test\", round(f,4), \" with reconstruction error  \", ReconError)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Optimize the reconstruction error for best F1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ReconError</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.2734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0.3770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>0.4459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0.4591</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ReconError      F1\n",
       "0           1  0.0998\n",
       "1           2  0.2734\n",
       "2           3  0.3770\n",
       "3           4  0.4459\n",
       "4           5  0.4591"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "minRE = 1\n",
    "maxRE = 50\n",
    "    \n",
    "EpsF1 = []\n",
    "\n",
    "for TryRE in range(minRE,maxRE):\n",
    "    pred = [1 if e > TryRE else 0 for e in error_df.reconstruction_error.values]\n",
    "    f = f1_score(y_test, pred, average='binary')\n",
    "    #print(\"F1 score on test\", round(f,4), \" with epsilon \", eps)\n",
    "    EpsF1.append([TryRE, round(f,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['ReconError', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ReconError    8.0000\n",
       "F1            0.5234\n",
       "Name: 7, dtype: float64"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Best Recon Error ... Max F1 on test\n",
    "\n",
    "EpsF1df.loc[EpsF1df['F1'].idxmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"ReconError\",\"F1\")\n",
    "plt.xlim(1, 50)\n",
    "plt.title(\"F1 vs ReconError\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Local Outlier Factor (LOF)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data  (284807, 31)\n",
      "normal_data  (284315, 31)\n",
      "fraud_data  (492, 31)\n",
      "Percent fraud  0.1727 %\n"
     ]
    }
   ],
   "source": [
    "#  SCALER / Normalization\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)\n",
    "print(\"Percent fraud \", round(100*492/284807, 4),\"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following on the 75,492 test LOF w 20 neighbors takes 12 mins so for running multiple times to find the best num of neighbors - we'll reduce the test size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "normal_pca_data  (284315, 30)\n",
      "fraud_pca_data (492, 30)\n",
      "Fraud data only in Test with NONE in the training\n",
      "X_train  (264315, 30)\n",
      "X_test  (20492, 30)\n",
      "y_test  (20492,)\n"
     ]
    }
   ],
   "source": [
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 20000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "print(\"normal_pca_data \", normal_pca_data.shape)\n",
    "print(\"fraud_pca_data\", fraud_pca_data.shape)\n",
    "print(\"Fraud data only in Test with NONE in the training\")\n",
    "print(\"X_train \", X_train.shape)\n",
    "#print(\"X_valid \", X_valid.shape)\n",
    "#print(\"y_valid \", y_valid.shape)\n",
    "print(\"X_test \", X_test.shape)\n",
    "print(\"y_test \", y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_inliers  (20000, 30)\n",
      "X_outliers  (492, 30)\n",
      "X  (20492, 30)\n",
      "n_outliers  492\n",
      "percent fraud in test:  0.024009369510052704\n"
     ]
    }
   ],
   "source": [
    "X_inliers = shuffled_data[-num_test:]\n",
    "X_outliers = fraud_pca_data[:]\n",
    "X = np.r_[X_inliers, X_outliers]\n",
    "\n",
    "n_outliers = len(X_outliers)\n",
    "ground_truth = np.ones(len(X), dtype=int)\n",
    "ground_truth[-n_outliers:] = -1\n",
    "\n",
    "PercFraud = n_outliers / X_test.shape[0]\n",
    "PercFraud\n",
    "\n",
    "print('X_inliers ', X_inliers.shape)\n",
    "print('X_outliers ', X_outliers.shape)\n",
    "print('X ', X.shape)\n",
    "print('n_outliers ', n_outliers)\n",
    "print('percent fraud in test: ', PercFraud)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 31.3 s, sys: 0 ns, total: 31.3 s\n",
      "Wall time: 31.3 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "# fit the model for outlier detection (default)\n",
    "clf = LocalOutlierFactor(n_neighbors=20, contamination = PercFraud)\n",
    "# use fit_predict to compute the predicted labels of the training samples\n",
    "# (when LOF is used for outlier detection, the estimator has no predict,\n",
    "# decision_function and score_samples methods).\n",
    "y_pred = clf.fit_predict(X)\n",
    "n_errors = (y_pred != ground_truth).sum()\n",
    "X_scores = clf.negative_outlier_factor_\n",
    "n_errors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy  0.9544\n"
     ]
    }
   ],
   "source": [
    "print('accuracy ' , round(1 - (n_errors / X.shape[0]),4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    492\n",
      "dtype: int64\n",
      "0    492\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Note that the ground truth and the y_pred for LOF is different than the original ... inliers = normal = 1 and outliers = fraud = -1\n",
    "# We have to modify the y_pred for the F1 score calculation to be similar to the above \n",
    "\n",
    "y_predLOF = y_pred.copy()\n",
    "y_predDF = pd.DataFrame(y_predLOF)\n",
    "print(y_predDF[y_predDF[0] == -1].count())\n",
    "\n",
    "y_predDF[y_predDF[0] == 1] = 0\n",
    "y_predDF[y_predDF[0] == -1] = 1\n",
    "print(y_predDF[y_predDF[0] == 1].count())\n",
    "\n",
    "y_predLOF = y_predDF.values\n",
    "y_predLOF = np.ravel(y_predLOF)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision  0.0508\n",
      "recall  0.0508\n",
      "F1 score on Test 0.0508\n"
     ]
    }
   ],
   "source": [
    "# F1 Score\n",
    "#print(\"F1 score\", round(f1_score(y_valid,pred, average='binary'), 4))\n",
    "precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "print(\"precision \", round((precision), 4))\n",
    "print(\"recall \", round((recall), 4))\n",
    "print(\"F1 score on Test\", round((fbeta_score), 4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.561  with num neighbors  500\n",
      "F1 score on test 0.5915  with num neighbors  600\n",
      "F1 score on test 0.6037  with num neighbors  700\n",
      "F1 score on test 0.6098  with num neighbors  800\n",
      "F1 score on test 0.6138  with num neighbors  900\n",
      "F1 score on test 0.6037  with num neighbors  1000\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NumNeighb</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>500</td>\n",
       "      <td>0.5610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>600</td>\n",
       "      <td>0.5915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>700</td>\n",
       "      <td>0.6037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>800</td>\n",
       "      <td>0.6098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>900</td>\n",
       "      <td>0.6138</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   NumNeighb      F1\n",
       "0        500  0.5610\n",
       "1        600  0.5915\n",
       "2        700  0.6037\n",
       "3        800  0.6098\n",
       "4        900  0.6138"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Optimize num of neighbors hyper paramter for best F1\n",
    "\n",
    "minRE = 500\n",
    "maxRE = 1100\n",
    "    \n",
    "EpsF1 = []\n",
    "\n",
    "for TryRE in range(minRE,maxRE,100):\n",
    "    clf = LocalOutlierFactor(n_neighbors=TryRE, contamination = PercFraud)\n",
    "    y_pred = clf.fit_predict(X)\n",
    "    n_errors = (y_pred != ground_truth).sum()\n",
    "    X_scores = clf.negative_outlier_factor_\n",
    "    \n",
    "    y_predLOF = y_pred.copy()\n",
    "    y_predDF = pd.DataFrame(y_predLOF)\n",
    "    \n",
    "    y_predDF[y_predDF[0] == 1] = 0\n",
    "    y_predDF[y_predDF[0] == -1] = 1\n",
    "    \n",
    "    y_predLOF = y_predDF.values\n",
    "    y_predLOF = np.ravel(y_predLOF)\n",
    "    \n",
    "    precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "    \n",
    "    print(\"F1 score on test\", round(fbeta_score,4), \" with num neighbors \", TryRE)\n",
    "    EpsF1.append([TryRE, round(fbeta_score,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['NumNeighb', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"NumNeighb\",\"F1\")\n",
    "plt.xlim(500, 1000)\n",
    "plt.title(\"F1 vs NumNeighb\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Knowing that 900 is the best num of neighbors for LOF we test the original 75,492 so the results can be compared to other models\n",
    "This may take 20 mins\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data  (284807, 31)\n",
      "normal_data  (284315, 31)\n",
      "fraud_data  (492, 31)\n",
      "Percent fraud  0.1727 %\n",
      "normal_pca_data  (284315, 30)\n",
      "fraud_pca_data (492, 30)\n",
      "Fraud data only in Test with NONE in the training\n",
      "X_train  (209315, 30)\n",
      "X_test  (75492, 30)\n",
      "y_test  (75492,)\n",
      "X_inliers  (75000, 30)\n",
      "X_outliers  (492, 30)\n",
      "X  (75492, 30)\n",
      "n_outliers  492\n",
      "percent fraud in test:  0.0065172468605945\n"
     ]
    }
   ],
   "source": [
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "print(\"data \", data.shape)\n",
    "print(\"normal_data \", normal_data.shape)\n",
    "print(\"fraud_data \", fraud_data.shape)\n",
    "print(\"Percent fraud \", round(100*492/284807, 4),\"%\")\n",
    "\n",
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "print(\"normal_pca_data \", normal_pca_data.shape)\n",
    "print(\"fraud_pca_data\", fraud_pca_data.shape)\n",
    "print(\"Fraud data only in Test with NONE in the training\")\n",
    "print(\"X_train \", X_train.shape)\n",
    "#print(\"X_valid \", X_valid.shape)\n",
    "#print(\"y_valid \", y_valid.shape)\n",
    "print(\"X_test \", X_test.shape)\n",
    "print(\"y_test \", y_test.shape)\n",
    "\n",
    "X_inliers = shuffled_data[-num_test:]\n",
    "X_outliers = fraud_pca_data[:]\n",
    "X = np.r_[X_inliers, X_outliers]\n",
    "\n",
    "n_outliers = len(X_outliers)\n",
    "ground_truth = np.ones(len(X), dtype=int)\n",
    "ground_truth[-n_outliers:] = -1\n",
    "\n",
    "PercFraud = n_outliers / X_test.shape[0]\n",
    "PercFraud\n",
    "\n",
    "print('X_inliers ', X_inliers.shape)\n",
    "print('X_outliers ', X_outliers.shape)\n",
    "print('X ', X.shape)\n",
    "print('n_outliers ', n_outliers)\n",
    "print('percent fraud in test: ', PercFraud)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "420"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf = LocalOutlierFactor(n_neighbors=900, contamination = PercFraud)\n",
    "\n",
    "y_pred = clf.fit_predict(X)\n",
    "n_errors = (y_pred != ground_truth).sum()\n",
    "X_scores = clf.negative_outlier_factor_\n",
    "#print('accuracy ' , round(1 - (n_errors / X.shape[0]),4))\n",
    "n_errors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision  0.5732\n",
      "recall  0.5732\n",
      "F1 score on Test 0.5732\n"
     ]
    }
   ],
   "source": [
    "y_predLOF = y_pred.copy()\n",
    "y_predDF = pd.DataFrame(y_predLOF)\n",
    "\n",
    "y_predDF[y_predDF[0] == 1] = 0\n",
    "y_predDF[y_predDF[0] == -1] = 1\n",
    "\n",
    "y_predLOF = y_predDF.values\n",
    "y_predLOF = np.ravel(y_predLOF)\n",
    "\n",
    "# F1 Score\n",
    "#print(\"F1 score\", round(f1_score(y_valid,pred, average='binary'), 4))\n",
    "precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "print(\"precision \", round((precision), 4))\n",
    "print(\"recall \", round((recall), 4))\n",
    "print(\"F1 score on Test\", round((fbeta_score), 4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Robust Covariance (Elliptic Envelope)\n",
    "\n",
    "Requires same manipulation as LOF ... inliers = 1 and outliers = -1 while the original is normal = 0 and fraud = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_inliers  (75000, 30)\n",
      "X_outliers  (492, 30)\n",
      "X  (75492, 30)\n",
      "n_outliers  492\n",
      "percent fraud in test:  0.0065172468605945\n"
     ]
    }
   ],
   "source": [
    "#  SCALER / Normalization\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "\n",
    "X_inliers = shuffled_data[-num_test:]\n",
    "X_outliers = fraud_pca_data[:]\n",
    "X = np.r_[X_inliers, X_outliers]\n",
    "\n",
    "n_outliers = len(X_outliers)\n",
    "ground_truth = np.ones(len(X), dtype=int)\n",
    "ground_truth[-n_outliers:] = -1\n",
    "\n",
    "PercFraud = n_outliers / X_test.shape[0]\n",
    "PercFraud\n",
    "\n",
    "print('X_inliers ', X_inliers.shape)\n",
    "print('X_outliers ', X_outliers.shape)\n",
    "print('X ', X.shape)\n",
    "print('n_outliers ', n_outliers)\n",
    "print('percent fraud in test: ', PercFraud)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "196"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cov = EllipticEnvelope(support_fraction = 0.994, contamination = PercFraud)\n",
    "\n",
    "y_pred = cov.fit_predict(X)\n",
    "n_errors = (y_pred != ground_truth).sum()\n",
    "n_errors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision  0.8008\n",
      "recall  0.8008\n",
      "F1 score on Test 0.8008\n"
     ]
    }
   ],
   "source": [
    "y_predLOF = y_pred.copy()\n",
    "y_predDF = pd.DataFrame(y_predLOF)\n",
    "\n",
    "y_predDF[y_predDF[0] == 1] = 0\n",
    "y_predDF[y_predDF[0] == -1] = 1\n",
    "\n",
    "y_predLOF = y_predDF.values\n",
    "y_predLOF = np.ravel(y_predLOF)\n",
    "\n",
    "# F1 Score\n",
    "#print(\"F1 score\", round(f1_score(y_valid,pred, average='binary'), 4))\n",
    "precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "print(\"precision \", round((precision), 4))\n",
    "print(\"recall \", round((recall), 4))\n",
    "print(\"F1 score on Test\", round((fbeta_score), 4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[74902    98]\n",
      " [   98   394]]\n",
      "__________________________________________________\n",
      "TP  394\n",
      "FP  98\n",
      "TN  74902\n",
      "FN  98\n"
     ]
    }
   ],
   "source": [
    "CM = confusion_matrix(y_test, y_predLOF)\n",
    "tn, fp, fn, tp = confusion_matrix(y_test, y_predLOF).ravel()\n",
    "\n",
    "print(CM)\n",
    "print(\"_\"*50)\n",
    "print(\"TP \", tp)\n",
    "print(\"FP \", fp)\n",
    "print(\"TN \", tn)\n",
    "print(\"FN \", fn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(CM, \n",
    "                      normalize    = False,\n",
    "                      target_names = ['Normal', 'Fraud'],\n",
    "                      title        = \"Confusion Matrix\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.8028  with support_fraction  0.95\n",
      "F1 score on test 0.8028  with support_fraction  0.96\n",
      "F1 score on test 0.8028  with support_fraction  0.97\n",
      "F1 score on test 0.8028  with support_fraction  0.98\n",
      "F1 score on test 0.8008  with support_fraction  0.99\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SupFrac</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.95</td>\n",
       "      <td>0.8028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.96</td>\n",
       "      <td>0.8028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.97</td>\n",
       "      <td>0.8028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.98</td>\n",
       "      <td>0.8028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.99</td>\n",
       "      <td>0.8008</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SupFrac      F1\n",
       "0     0.95  0.8028\n",
       "1     0.96  0.8028\n",
       "2     0.97  0.8028\n",
       "3     0.98  0.8028\n",
       "4     0.99  0.8008"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Optimize support_fraction hyper paramter for best F1\n",
    "\n",
    "minRE = 0.95\n",
    "maxRE = 0.99\n",
    "    \n",
    "EpsF1 = []\n",
    "\n",
    "for TryRE in np.arange(minRE, maxRE, 0.01):\n",
    "    cov = EllipticEnvelope(support_fraction = TryRE, contamination = PercFraud)\n",
    "    y_pred = cov.fit_predict(X)\n",
    "    n_errors = (y_pred != ground_truth).sum()\n",
    "    \n",
    "    y_predLOF = y_pred.copy()\n",
    "    y_predDF = pd.DataFrame(y_predLOF)\n",
    "    \n",
    "    y_predDF[y_predDF[0] == 1] = 0\n",
    "    y_predDF[y_predDF[0] == -1] = 1\n",
    "    \n",
    "    y_predLOF = y_predDF.values\n",
    "    y_predLOF = np.ravel(y_predLOF)\n",
    "    \n",
    "    precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "    \n",
    "    print(\"F1 score on test\", round(fbeta_score,4), \" with support_fraction \", TryRE)\n",
    "    EpsF1.append([TryRE, round(fbeta_score,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['SupFrac', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"SupFrac\",\"F1\")\n",
    "plt.xlim(minRE, maxRE)\n",
    "plt.title(\"F1 vs SupFrac\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Isolation Forest\n",
    "Requires same manipulation as LOF ... inliers = 1 and outliers = -1 while the original is normal = 0 and fraud = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_inliers  (75000, 30)\n",
      "X_outliers  (492, 30)\n",
      "X  (75492, 30)\n",
      "n_outliers  492\n",
      "percent fraud in test:  0.0065172468605945\n"
     ]
    }
   ],
   "source": [
    "#  SCALER / Normalization\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "\n",
    "X_inliers = shuffled_data[-num_test:]\n",
    "X_outliers = fraud_pca_data[:]\n",
    "X = np.r_[X_inliers, X_outliers]\n",
    "\n",
    "n_outliers = len(X_outliers)\n",
    "ground_truth = np.ones(len(X), dtype=int)\n",
    "ground_truth[-n_outliers:] = -1\n",
    "\n",
    "PercFraud = n_outliers / X_test.shape[0]\n",
    "PercFraud\n",
    "\n",
    "print('X_inliers ', X_inliers.shape)\n",
    "print('X_outliers ', X_outliers.shape)\n",
    "print('X ', X.shape)\n",
    "print('n_outliers ', n_outliers)\n",
    "print('percent fraud in test: ', PercFraud)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "522\n",
      "CPU times: user 2min 7s, sys: 8.21 s, total: 2min 15s\n",
      "Wall time: 2min 15s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "isofo = IsolationForest(n_estimators = 1050, max_features = 1.0, max_samples=1.0, \n",
    "                        behaviour=\"new\", bootstrap=False, random_state=22,\n",
    "                        contamination = PercFraud)\n",
    "\n",
    "y_pred = isofo.fit_predict(X)\n",
    "n_errors = (y_pred != ground_truth).sum()\n",
    "print(n_errors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision  0.4695\n",
      "recall  0.4695\n",
      "F1 score on Test 0.4695\n"
     ]
    }
   ],
   "source": [
    "y_predLOF = y_pred.copy()\n",
    "y_predDF = pd.DataFrame(y_predLOF)\n",
    "\n",
    "y_predDF[y_predDF[0] == 1] = 0\n",
    "y_predDF[y_predDF[0] == -1] = 1\n",
    "\n",
    "y_predLOF = y_predDF.values\n",
    "y_predLOF = np.ravel(y_predLOF)\n",
    "\n",
    "# F1 Score\n",
    "#print(\"F1 score\", round(f1_score(y_valid,pred, average='binary'), 4))\n",
    "precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "print(\"precision \", round((precision), 4))\n",
    "print(\"recall \", round((recall), 4))\n",
    "print(\"F1 score on Test\", round((fbeta_score), 4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.4634  with num_estimators  900\n",
      "F1 score on test 0.4654  with num_estimators  950\n",
      "F1 score on test 0.4695  with num_estimators  1000\n",
      "F1 score on test 0.4695  with num_estimators  1050\n",
      "F1 score on test 0.4695  with num_estimators  1100\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NumEstim</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>900</td>\n",
       "      <td>0.4634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>950</td>\n",
       "      <td>0.4654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1000</td>\n",
       "      <td>0.4695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1050</td>\n",
       "      <td>0.4695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1100</td>\n",
       "      <td>0.4695</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   NumEstim      F1\n",
       "0       900  0.4634\n",
       "1       950  0.4654\n",
       "2      1000  0.4695\n",
       "3      1050  0.4695\n",
       "4      1100  0.4695"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Optimize Num Estimators hyper paramter for best F1\n",
    "\n",
    "minRE = 900\n",
    "maxRE = 1150\n",
    "    \n",
    "EpsF1 = []\n",
    "\n",
    "for TryRE in np.arange(minRE, maxRE, 50):\n",
    "    isofo = IsolationForest(n_estimators = TryRE, max_features = 1.0, max_samples=1.0, \n",
    "                        behaviour=\"new\", bootstrap=False, random_state=22,\n",
    "                        contamination = PercFraud)\n",
    "\n",
    "    y_pred = isofo.fit_predict(X)\n",
    "    n_errors = (y_pred != ground_truth).sum()\n",
    "    \n",
    "    y_predLOF = y_pred.copy()\n",
    "    y_predDF = pd.DataFrame(y_predLOF)\n",
    "    \n",
    "    y_predDF[y_predDF[0] == 1] = 0\n",
    "    y_predDF[y_predDF[0] == -1] = 1\n",
    "    \n",
    "    y_predLOF = y_predDF.values\n",
    "    y_predLOF = np.ravel(y_predLOF)\n",
    "    \n",
    "    precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "    \n",
    "    print(\"F1 score on test\", round(fbeta_score,4), \" with num_estimators \", TryRE)\n",
    "    EpsF1.append([TryRE, round(fbeta_score,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['NumEstim', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"NumEstim\",\"F1\")\n",
    "plt.xlim(minRE, maxRE)\n",
    "plt.title(\"F1 vs NumEstim\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# One Class SVM\n",
    "Requires same manipulation as LOF ... inliers = 1 and outliers = -1 while the original is normal = 0 and fraud = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "_kg_hide-input": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_inliers  (75000, 30)\n",
      "X_outliers  (492, 30)\n",
      "X  (75492, 30)\n",
      "n_outliers  492\n",
      "percent fraud in test:  0.0065172468605945\n"
     ]
    }
   ],
   "source": [
    "#  SCALER / Normalization\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "data = dfRaw.copy()\n",
    "scl = StandardScaler()\n",
    "all_cols = list(data)[:] \n",
    "pca_columns = list(data)[:-1] # all cols without Class\n",
    "Xcopy = data[pca_columns]\n",
    "XcopyALL = data[all_cols]\n",
    "Xscaled = scl.fit_transform(Xcopy)\n",
    "OnlyClass = data['Class'].values.reshape(-1,1)\n",
    "data = np.concatenate((Xscaled, OnlyClass), axis=1)\n",
    "data = pd.DataFrame(data, columns = XcopyALL.columns)\n",
    "\n",
    "normal_data = data.loc[data[\"Class\"] == 0]\n",
    "fraud_data = data.loc[data[\"Class\"] == 1]\n",
    "\n",
    "# CREATE the TRAIN and TEST sets\n",
    "# Fraud data is ONLY in TEST - not in TRAIN\n",
    "\n",
    "normal_pca_data = normal_data[pca_columns]\n",
    "fraud_pca_data = fraud_data[pca_columns]\n",
    "\n",
    "num_test = 75000\n",
    "shuffled_data = normal_pca_data.sample(frac=1, random_state=1960)[:-num_test].values\n",
    "X_train = shuffled_data\n",
    "\n",
    "X_test = np.concatenate([shuffled_data[-num_test:], fraud_pca_data[:]])\n",
    "y_test = np.concatenate([np.zeros(num_test), np.ones(492)])\n",
    "\n",
    "\n",
    "X_inliers = shuffled_data[-num_test:]\n",
    "X_outliers = fraud_pca_data[:]\n",
    "X = np.r_[X_inliers, X_outliers]\n",
    "\n",
    "n_outliers = len(X_outliers)\n",
    "ground_truth = np.ones(len(X), dtype=int)\n",
    "ground_truth[-n_outliers:] = -1\n",
    "\n",
    "PercFraud = n_outliers / X_test.shape[0]\n",
    "PercFraud\n",
    "\n",
    "print('X_inliers ', X_inliers.shape)\n",
    "print('X_outliers ', X_outliers.shape)\n",
    "print('X ', X.shape)\n",
    "print('n_outliers ', n_outliers)\n",
    "print('percent fraud in test: ', PercFraud)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/svm/base.py:196: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n",
      "  \"avoid this warning.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "981\n",
      "CPU times: user 38 s, sys: 141 ms, total: 38.1 s\n",
      "Wall time: 38.1 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "OneSVM = OneClassSVM(nu = PercFraud)\n",
    "\n",
    "y_pred = OneSVM.fit_predict(X)\n",
    "n_errors = (y_pred != ground_truth).sum()\n",
    "print(n_errors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision  0.1646\n",
      "recall  0.2439\n",
      "F1 score on Test 0.1966\n"
     ]
    }
   ],
   "source": [
    "y_predLOF = y_pred.copy()\n",
    "y_predDF = pd.DataFrame(y_predLOF)\n",
    "\n",
    "y_predDF[y_predDF[0] == 1] = 0\n",
    "y_predDF[y_predDF[0] == -1] = 1\n",
    "\n",
    "y_predLOF = y_predDF.values\n",
    "y_predLOF = np.ravel(y_predLOF)\n",
    "\n",
    "# F1 Score\n",
    "#print(\"F1 score\", round(f1_score(y_valid,pred, average='binary'), 4))\n",
    "precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "print(\"precision \", round((precision), 4))\n",
    "print(\"recall \", round((recall), 4))\n",
    "print(\"F1 score on Test\", round((fbeta_score), 4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/svm/base.py:196: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n",
      "  \"avoid this warning.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.2567  with nu  0.017\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/svm/base.py:196: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n",
      "  \"avoid this warning.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.269  with nu  0.018000000000000002\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/svm/base.py:196: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n",
      "  \"avoid this warning.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.2596  with nu  0.019000000000000003\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/svm/base.py:196: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n",
      "  \"avoid this warning.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.2695  with nu  0.020000000000000004\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/sklearn/svm/base.py:196: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n",
      "  \"avoid this warning.\", FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 score on test 0.2585  with nu  0.021000000000000005\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nu</th>\n",
       "      <th>F1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.017</td>\n",
       "      <td>0.2567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.018</td>\n",
       "      <td>0.2690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.019</td>\n",
       "      <td>0.2596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.020</td>\n",
       "      <td>0.2695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.021</td>\n",
       "      <td>0.2585</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      nu      F1\n",
       "0  0.017  0.2567\n",
       "1  0.018  0.2690\n",
       "2  0.019  0.2596\n",
       "3  0.020  0.2695\n",
       "4  0.021  0.2585"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Optimize nu hyper paramter for best F1\n",
    "\n",
    "minRE = 0.017\n",
    "maxRE = 0.022\n",
    "    \n",
    "EpsF1 = []\n",
    "\n",
    "for TryRE in np.arange(minRE, maxRE, 0.001):\n",
    "    OneSVM = OneClassSVM(nu = TryRE)\n",
    "    y_pred = OneSVM.fit_predict(X)\n",
    "    n_errors = (y_pred != ground_truth).sum()\n",
    "    \n",
    "    y_predLOF = y_pred.copy()\n",
    "    y_predDF = pd.DataFrame(y_predLOF)\n",
    "    \n",
    "    y_predDF[y_predDF[0] == 1] = 0\n",
    "    y_predDF[y_predDF[0] == -1] = 1\n",
    "    \n",
    "    y_predLOF = y_predDF.values\n",
    "    y_predLOF = np.ravel(y_predLOF)\n",
    "    \n",
    "    precision,recall,fbeta_score, support  = precision_recall_fscore_support(y_test, y_predLOF, average='binary')\n",
    "    \n",
    "    print(\"F1 score on test\", round(fbeta_score,4), \" with nu \", TryRE)\n",
    "    EpsF1.append([TryRE, round(fbeta_score,4)])\n",
    "    \n",
    "EpsF1df = pd.DataFrame(EpsF1, columns = ['nu', 'F1'])\n",
    "EpsF1df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "EpsF1df.plot.line(\"nu\",\"F1\")\n",
    "plt.xlim(minRE, maxRE)\n",
    "plt.title(\"F1 vs nu\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 310,
     "sourceId": 23498,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 25114,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
